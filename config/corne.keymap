/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        printscreen {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <39 40 41>;
            layers = <0>;
            timeout-ms = <60>;
            require-prior-idle-ms = <60>;
        };

        btclear {
            bindings = <&none>;
            key-positions = <11 23 35>;
            layers = <2>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <0 12 24 35 11 23>;
        };

        master_combo {
            bindings = <&master_macro>;
            key-positions = <0 1 2 9 10 11>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        mouseup {
            bindings = <&mmv MOVE_UP>;
            key-positions = <12 3>;
        };

        mousedown {
            bindings = <&mmv MOVE_DOWN>;
            key-positions = <12 15>;
        };

        mouseleft {
            bindings = <&mmv MOVE_LEFT>;
            key-positions = <12 14>;
        };

        mouseright {
            bindings = <&mmv MOVE_RIGHT>;
            key-positions = <12 16>;
        };

        capslock {
            bindings = <&caps_word>;
            key-positions = <0 12>;
        };
    };

    macros {
        master_macro: master {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp AT &kp R &kp EXCL &kp N &kp N2 &kp N7 &kp LS(D) &kp LS(E) &kp LS(C) &kp EXCL &kp DLLR &kp M>;
            label = "MASTER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E         &kp R  &kp T            &kp Y      &kp U  &kp I          &kp O    &kp P          &kp ENTER
&lt 3 LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F  &kp G            &kp H      &kp J  &kp K          &kp L    &kp SEMICOLON  &kp CAPSLOCK
&kp RCTRL         &kp Z  &kp X  &kp C         &kp V  &kp B            &kp N      &kp M  &kp COMMA      &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                                &kp LEFT_WIN  &mo 2  &kp BACKSPACE    &kp SPACE  &mo 1  &kp RIGHT_ALT
            >;
        };

        numbersymbol {
            bindings = <
&kp TAB    &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp STAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&kp CAPS   &kp N1           &kp N2  &kp N3    &kp N4      &kp N5         &kp MINUS  &kp UNDER      &kp APOS   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&kp LSHFT  &kp N6           &kp N7  &kp N8    &kp N9      &kp N0         &kp PLUS   &kp EQUAL      &kp TILDE  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
                                    &kp LGUI  &trans      &kp LCTRL      &kp SPACE  &trans         &kp RALT
            >;
        };

        function {
            bindings = <
&kp ESCAPE  &kp F1        &kp F2        &kp F3        &kp F4           &kp F5              &kp F6     &kp F7     &kp F8          &kp F9         &kp F10  &kp DEL
&kp CAPS    &kp C_PREV    &kp C_NEXT    &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE    &kp HOME   &kp PG_UP  &kp UP_ARROW    &kp PAGE_DOWN  &kp END  &kp C_BRIGHTNESS_INC
&kp LSHFT   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4        &trans     &kp LEFT   &kp DOWN_ARROW  &kp RIGHT      &trans   &kp C_BRI_DEC
                                        &kp LGUI      &trans           &kp LCTRL           &kp SPACE  &to 4      &kp RALT
            >;
        };

        mousecontrol {
            bindings = <
&trans  &trans  &trans          &msc SCRL_UP    &trans           &trans    &trans  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &trans  &trans
&trans  &trans  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &trans    &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans    &trans  &trans          &trans          &trans           &trans  &trans
                                &trans          &trans           &trans    &trans  &trans          &trans
            >;
        };

        gaming {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y   &kp U   &kp I          &kp O    &kp P     &kp BACKSPACE
&kp LSHFT  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H   &kp J   &kp K          &kp L    &kp SEMI  &kp ENTER
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N   &kp M   &kp COMMA      &kp DOT  &kp FSLH  &trans
                         &kp LEFT_ALT  &mo 5  &kp SPACE    &trans  &trans  &kp RIGHT_ALT
            >;
        };

        gaming2 {
            bindings = <
&kp ESC    &kp N1  &trans  &kp N3  &kp N4  &kp N5    &trans  &trans  &trans  &trans  &trans  &kp F1
&kp GRAVE  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &kp F2
&trans     &kp N2  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &trans  &trans    &trans  &to 0   &trans
            >;
        };
    };
};
